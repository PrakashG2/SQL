CREATE TABLE TASK7(
STUDENT_ID INT PRIMARY KEY IDENTITY(1,1),
STUDENT_NAME VARCHAR(30),
DEPARTMENT VARCHAR(20),
SCORE INT
)

INSERT INTO TASK7(STUDENT_NAME,DEPARTMENT,SCORE) VALUES 
('Ajay','BCA',87.45),
('Haarika','B.COM PA',85.6),
('Madhu','B.SC CS',87.45),
('Iniyan','BCA',75.0),
('Zoya','B.SC CS',95.25),
('Dhee','BCA',94.5),
('Naren','BCA',94.5),
('Shreya','B.COM PA',92.0),
('Elango','B.SC CS',85.25),
('Karthika','B.SC IT',97.5),
('Francis','B.COM IT',92.5),
('Umran','B.SC CS',77.85),
('Calvin','B.COM PA',90.63),
('Gayathri','B.SC CS',80.0),
('Xavier','B.SC IT',78.5),
('Jagan','B.COM IT',81.94),
('Bharti','B.SC IT',83.5),
('Logesh','B.COM PA',85.25),
('Vichu','BCA',78.5),
('Pragya','B.SC CS',75.0),
('Walter','B.COM IT',86.45),
('Ravin','BCA',80.0),
('Tanya','B.COM IT',95.5),
('Sam','B.SC IT',90.5),
('Yazmin','BCA',84.75)

SELECT * FROM TASK7

--1. Create a non-clustered index for department.
CREATE INDEX DEP ON TASK7 (DEPARTMENT ASC)

--2. Create a filtered index for department='BCA'
CREATE INDEX DEPBCA ON TASK7(DEPARTMENT) WHERE DEPARTMENT='BCA'

--3. Create a view for students in BCA department.
CREATE VIEW DEP_BCA AS SELECT DEPARTMENT FROM TASK7 WHERE DEPARTMENT='BCA'
 SELECT * FROM DEP_BCA

--4. Apply Rank() for all the students based on score.
SELECT STUDENT_NAME,SCORE,RANK() OVER (ORDER BY SCORE) AS RANK FROM TASK7

--5. Apply Dense_Rank() for students in each department based on score
SELECT STUDENT_NAME,SCORE,DEPARTMENT,DENSE_RANK() OVER (ORDER BY SCORE) AS RANK FROM TASK7


--b.Create 2 tables Manager(id(pk), name) and Employee(eid(pk),ename,mid(fk), department).
CREATE TABLE MANAGER(
ID INT PRIMARY KEY,
NAME VARCHAR(50)
)

CREATE TABLE EMPLOYEEE(
EID INT PRIMARY KEY,
E_NAME VARCHAR(50),
MID INT FOREIGN KEY (MID) REFERENCES MANAGER(ID)
)

INSERT INTO MANAGER VALUES (1,'ARUN')
INSERT INTO MANAGER VALUES (2,'PRAKASH')
INSERT INTO MANAGER VALUES (3,'JOSEPH')
INSERT INTO MANAGER VALUES (4,'VENKIT')
INSERT INTO MANAGER VALUES (5,'RAMAN')

INSERT INTO EMPLOYEEE VALUES (1,'DARSHAN',1)
INSERT INTO EMPLOYEEE VALUES (2,'SRIKANTH',2)
INSERT INTO EMPLOYEEE VALUES (3,'ANIRUDH',3)
INSERT INTO EMPLOYEEE VALUES (4,'SELVA',4)
INSERT INTO EMPLOYEEE VALUES (11,'IRON MAN',11)

--1. Create a complex view by retrieving the records from Manager and Employee table.
CREATE VIEW TASK7VIEW AS SELECT M.ID,M.NAME,E.EID,E.E_NAME,E.MID FROM MANAGER M FULL JOIN EMPLOYEEE E ON M.ID=E.EID
SELECT * FROM TASK7VIEW

--2. Show the working of 'on delete cascade on update set default' for the above tables
ALTER TABLE EMPLOYEEE DROP CONSTRAINT FK__EMPLOYEEE__MID__08B54D69
ALTER TABLE EMPLOYEEE DROP CONSTRAINT FK_ID


ALTER TABLE EMPLOYEEE
ADD CONSTRAINT FOREIGNKEY
FOREIGN KEY (MID)
REFERENCES MANAGER(ID)
ON DELETE CASCADE
ON UPDATE SET DEFAULT;

ALTER TABLE EMPLOYEEE ADD CONSTRAINT DEFAULT_ID DEFAULT 4 FOR MID

SELECT * FROM EMPLOYEEE 
SELECT * FROM MANAGER

UPDATE MANAGER SET ID=13 WHERE ID=11
UPDATE EMPLOYEEE SET MID=9 WHERE EID=3

DELETE FROM MANAGER WHERE ID=6
